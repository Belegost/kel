supportBlock.section = !1;
var dashboardHeaderDigits = $(".dashboard-header .big-digits");
dashboardHeaderDigits.length && ($(".dashboard-header-totalbtc-value").spincrement({
    thousandSeparator: "",
    decimalPlaces: 6,
    decimalPoint: ".",
    duration: 2e3
}), $(".dashboard-header-totalpersents-value").spincrement({
    thousandSeparator: "",
    decimalPlaces: 2,
    decimalPoint: ".",
    duration: 1500
}), $(".dashboard-charts-total_histogram-btc").spincrement({
    thousandSeparator: "",
    decimalPlaces: 6,
    decimalPoint: ".",
    duration: 1500
}));
var instrumentCharts = {};
$(".dashboard-charts-cryptoassets-filter input").datepicker({
    autoSize: !0,
    dateFormat: "dd/mm/yy",
    autoclose: !0,
    onSelect: function (t) {
        var a = !0;
        $(".dashboard-charts-cryptoassets-filter input").each(function () {
            $(this).val() || (a = !1)
        }), a ? $(".dashboard-charts-cryptoassets-filter .btn").prop("disabled", !1) : $(".dashboard-charts-cryptoassets-filter .btn").prop("disabled", !0), $(this).hasClass("product-returns-date-start") ? $("input.product-returns-date-end").datepicker("option", "minDate", $(this).val()) : $("input.product-returns-date-start").datepicker("option", "maxDate", $(this).val())
    }
}), $(".dashboard-charts-cryptoassets-filter .btn").on("click", function () {
    var t = $(this).data("targetUrl"),
        a = $(".dashboard-charts-cryptoassets-filter input.product-returns-date-start").val(),
        o = $(".dashboard-charts-cryptoassets-filter input.product-returns-date-end").val(), e = $(this);
    e.prop("disabled", !0), $.ajax({
        url: t,
        type: "POST",
        cache: !1,
        data: {dateFrom: a, dateTo: o},
        dataType: "json",
        processData: !1,
        contentType: !1,
        success: function (t) {
            "success" == t.status ? ($.each(t.data, function (t, a) {
                $(".dashboard-products-row-" + t + " .dashboard-products-row-diff").html((1 * a < 0 ? '<span class="icon-color-arrow icon-color-arrow-down"></span>' : '<span class="icon-color-arrow icon-color-arrow-up"></span>+') + a)
            }), e.prop("disabled", !1)) : displayPopupMsg(t.error)
        },
        complete: function () {
            e.prop("disabled", !1)
        }
    })
});
var customTooltips = function (e) {
    var t = document.getElementById("total_histogram_tooltip");
    if (t || ((t = document.createElement("div")).id = "total_histogram_tooltip", t.className = "charts-tooltip", this._chart.canvas.parentNode.appendChild(t), tooltipPointer = document.createElement("div"), tooltipPointer.className = "charts-tooltip-pointer", t.appendChild(tooltipPointer), tooltipWrapper = document.createElement("div"), tooltipWrapper.className = "charts-tooltip-wrapper", t.appendChild(tooltipWrapper)), 0 !== e.opacity) {
        if (t.classList.remove("above", "below", "no-transform"), e.yAlign ? t.classList.add(e.yAlign) : t.classList.add("no-transform"), e.body) {
            var a = e.title || [], o = e.body.map(function (t) {
                return t.lines
            }), s = '<div class="tooltip-title">';
            a.forEach(function (t) {
                s += '<div class="tooltip-title-item">' + t + "</div>"
            }), s += '</div><div class="tooltip-body">', o.forEach(function (t, a) {
                var o = ("" + t).split(":");
                s += '<div class="tooltip-body-item"><span style="background:' + e.labelColors[a].backgroundColor + '"></span>' + o[0] + ":<b>" + o[1] + "</b></div>"
            }), s += "</div>", tooltipWrapper.innerHTML = s
        }
        var i = this._chart.canvas.offsetTop, r = this._chart.canvas.offsetLeft, n = this._chart.canvas.clientWidth,
            d = this._chart.canvas.clientHeight;
        t.style.opacity = 1, t.style.left = r + "px", t.style.top = i + "px", t.style.width = n + "px", t.style.height = d + "px", tooltipPointer.style.left = e.caretX + "px", e.caretX + tooltipWrapper.clientWidth / 2 + 30 < n ? tooltipWrapper.style.left = e.caretX + tooltipWrapper.clientWidth / 2 + 30 + "px" : tooltipWrapper.style.left = e.caretX - tooltipWrapper.clientWidth / 2 - 30 + "px"
    } else t.style.opacity = 0
}, lineOptions = {
    responsive: !0,
    scales: {
        xAxes: [{
            ticks: {maxTicksLimit: 767 < windowWidth ? 10 : 6, maxRotation: 0, minRotation: 0},
            gridLines: {display: !1}
        }],
        yAxes: [{
            ticks: {stacked: !0, beginAtZero: !1},
            gridLines: {display: !0, zeroLineWidth: 0, color: "rgba(0,0,0,.05)"},
            scaleLabel: {fontColor: "#FFF"}
        }]
    },
    tooltips: {enabled: !1, mode: "index", position: "nearest", intersect: !1, custom: customTooltips},
    title: {display: !1},
    legend: {display: !1},
    elements: {rectangle: {backgroundColor: "rgba(0,0,0,0.8)", borderWidth: 0}, point: {radius: 2, hoverRadius: 4}},
    animation: {duration: 3e3}
}, totalCapWrap = document.querySelector("#total_cap");
if (totalCapWrap) {
    var capOptions = Object.assign({}, lineOptions, {
        scales: {
            xAxes: [{
                ticks: {
                    // maxTicksLimit: 767 < windowWidth ? 10 : 6,
                    maxTicksLimit: 6,
                    maxRotation: 0, minRotation: 0,
                    // callback: function (value, index, values) {
                    //     var newVal = value.split(' ');
                    //     return newVal[0] + ' ' + newVal[2];
                    // }
                },
                gridLines: {display: !1}
            }]
        }
    });
    var totalCap = new Chart(totalCapWrap, {type: "line", data: {}, options: capOptions});
}
var totalPieWrap = document.querySelector("#total_pie");
if (totalPieWrap) var totalPie = new Chart(document.getElementById("total_pie"), {
    type: "pie",
    data: {},
    options: {
        responsive: !0,
        tooltips: {
            enabled: !0,
            backgroundColor: "rgba(255,255,255,0.94)",
            borderColor: "rgba(0,0,0,0.15)",
            borderWidth: 1,
            titleFontColor: "#000",
            titleFontFamily: "Montserrat",
            titleFontSize: 12,
            titleMarginBottom: 15,
            bodyFontColor: "#000",
            bodySpacing: 10,
            cornerRadius: 0,
            xPadding: 15,
            yPadding: 10
        },
        legend: {
            display: !0, position: "left", labels: {
                generateLabels: function (s) {
                    var i = s.data;
                    return i.labels.length && i.datasets.length ? i.labels.map(function (t, a) {
                        var o = s.getDatasetMeta(0), e = i.datasets[0];
                        return {
                            text: t + " â€” " + e.data[a] + "%",
                            fillStyle: graphColors[a],
                            lineWidth: 0,
                            hidden: isNaN(e.data[a]) || o.data[a].hidden,
                            index: a
                        }
                    }) : []
                }
            }
        },
        title: !1,
        elements: {arc: {borderWidth: 0}},
        maintainAspectRatio: !0,
        animation: {duration: 2e3}
    }
});

function updateData(t, a, o) {
    t.data.labels = a, t.data.datasets = o, t.update()
}

$(".analytics-row-show").on("click", function () {
    var t = $(this).closest(".analytics-row"), a = $(this).closest(".analytics-row").find(".analytics-row-more");
    if (!t.hasClass("analytics-all-row")) {
        var o = a.find("canvas"), e = o.attr("id");
        if (!instrumentCharts[e]) {
            var s = lineOptions;
            s.maintainAspectRatio = !1, s.tooltips = {
                enabled: !0,
                mode: "index",
                position: "nearest",
                intersect: !1,
                custom: !1,
                backgroundColor: "rgba(255,255,255,0.94)",
                titleFontColor: "#000",
                titleFontFamily: "Open Sans",
                titleFontSize: 14,
                titleMarginBottom: 15,
                bodyFontColor: "#000",
                cornerRadius: 0,
                xPadding: 15,
                yPadding: 10
            }, o.height = 200, instrumentCharts[e] = new Chart(o, {type: "line", data: [], options: s})
        }
        updateData(instrumentCharts[e], datasetAnalytics[e].m1.labels, datasetAnalytics[e].m1.datasets)
    }
    setTimeout(function () {
        a.slideToggle(300)
    }, 300)
}), $(".analytics-row-more .histogramm-menu span").on("click", function () {
    var t = $(this).data("period"), a = $(this).closest(".analytics-row").find("canvas").attr("id");
    console.log(a + " - " + t), console.log(datasetAnalytics[a][t].datasets), updateData(instrumentCharts[a], datasetAnalytics[a][t].labels, datasetAnalytics[a][t].datasets)
});
var dashboardPage = {totalPie: document.querySelector("#total_pie"), totalCap: document.querySelector("#total_cap")};
window.addEventListener("load", function () {
    $(".histogramm-menu").each(function () {
        histogrammMenu(this)
    })
}), window.addEventListener("scroll", function () {
    window.pageYOffset || document.documentElement.scrollTop;
    totalCapWrap && isVisible(totalCapWrap) && (totalCapWrap = !1, updateData(totalCap, datasetAnalytics.totalCap.d1.labels, datasetAnalytics.totalCap.d1.datasets)), totalPieWrap && isVisible(totalPieWrap) && (totalPieWrap = !1, updateData(totalPie, datasetAnalytics.productPie.conservative.labels, datasetAnalytics.productPie.conservative.datasets))
}), $(".pricing-periods-item").on("click", function () {
    $(".pricing-periods-item").removeClass("active"), $(this).addClass("active");
    var t = this.offsetLeft;
    $(".pricing-periods-indicator").css("transform", "translateX(" + t + "px)");
    var a = datasetAnalytics.productPrices[$(this).data("period")];
    $.each(a, function (t, a) {
        $(".dashboard-products-row-" + t + " .dashboard-products-row-value").html("$ " + a)
    })
}), $(".dashboard-products-row").on("click", function () {
    var t = $(this).data("product");
    $(".dashboard-charts-cryptoassets-body-col_2 h5").text(t + " trust"), updateData(totalPie, datasetAnalytics.productPie[t].labels, datasetAnalytics.productPie[t].datasets)
}), $("#product-returns").on("change", function () {
    var t = $(this).val(), a = datasetAnalytics.productReturns[t];
    $.each(a, function (t, a) {
        $(".dashboard-products-row-" + t + " .dashboard-products-row-diff").html((1 * a < 0 ? '<span class="icon-color-arrow icon-color-arrow-down"></span>' : '<span class="icon-color-arrow icon-color-arrow-up"></span>+') + a)
    })
}), $(".dashboard-products-row-qty input").on("blur", function (t) {
    var a = parseInt($(this).val());
    isNaN(a) && $(this).val(0)
}), $(".dashboard-products-row-btn .btn").on("click", function (t) {
    t.preventDefault();
    var a = $(".pricing-periods-item.active").data("period"), o = $(this).closest(".dashboard-products-row"),
        e = o.find(".dashboard-products-row-qty input").val(), s = o.find(".dashboard-products-row-value").text();
    s = s.replace(/[\s\$,]/g, "");
    var i = $(this).data("product"), r = $(this).data("targetUrl");
    if (0 < e) {
        var n = $(".popup-shadow");
        $(".popup-product_buy-info-name").html(o.find(".dashboard-products-row-name").html()), $(".popup-product_buy-cost").text("$ " + s), $(".popup-product_buy-qty input").val(e), $(".popup-product_buy-total").text("$ " + e * s), $(".popup-product_buy-info button").data({
            link: r,
            qty: e,
            name: i,
            period: a
        }), $(".popup").removeClass("visible"), n.fadeIn(300, function () {
            $(".popup.popup-product_buy").addClass("visible")
        })
    } else displayPopupMsg("<h4>Enter product quantity</h4>")
}), $(".popup-product_buy-info button").on("click", function () {
    var a = $(this);
    a.prop("disabled", !0), $.ajax({
        url: a.data("link"),
        type: "POST",
        cache: !1,
        data: {qty: a.data("qty"), name: a.data("name"), period: a.data("period")},
        dataType: "json",
        processData: !1,
        contentType: !1,
        success: function (t) {
            "success" == t.status ? (displayPopupMsg("<h4>Product Added!</h4>"), setTimeout(function () {
                window.location.href = "/myproducts"
            }, 2e3), a.prop("disabled", !1)) : displayPopupMsg(t.error)
        },
        complete: function () {
            a.prop("disabled", !1)
        }
    })
});